---
name: build wheel file

on:
  push:
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
    - edited

jobs:
  matrix:
    strategy:
      matrix:
        cfg:
        - platform:
          - os: ubuntu-latest
            arch: x86_64
          - os: ubuntu-latest
            arch: aarch64
          - os: windows-latest
            arch: AMD64
          python:
          - setup: "3.9"
            cibw: cp39
          - setup: "3.10"
            cibw: cp310
          - setup: "3.11"
            cibw: cp311
          - setup: "3.12"
            cibw: cp312
          - setup: "3.13"
            cibw: cp313
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      shell: python
      env:
        CFG: ${{ toJSON(matrix.cfg) }}
      run: |
        import json
        import os
        with open(os.environ["GITHUB_OUTPUT"], "a") as f:
            f.write(f"matrix={json.dumps(json.loads(os.environ['CFG']))}\n")

  build:
    needs:
    - matrix
    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    runs-on: ${{ matrix.platform.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      if: ${{ matrix.platform.arch == 'aarch64' }}
      with:
        platforms: arm64

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==2.21.3

    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_ARCHS: "${{ matrix.platform.arch }}"
        CIBW_BUILD: "${{ matrix.python.cibw }}-*"
        CIBW_SKIP: "*-musllinux_*"
        CIBW_BEFORE_ALL_MACOS: brew install swig
        CIBW_BEFORE_ALL_LINUX: yum install -y make cmake swig
        CIBW_BEFORE_BUILD: python -m pip install scikit-build
        CIBW_BUILD_VERBOSITY: 1

    - uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ matrix.python.cibw }}-${{ runner.os }}-${{ matrix.platform.arch }}
        path: ./wheelhouse/*.whl

  test:
    needs:
    - matrix
    - build
    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    runs-on: ${{ matrix.platform.os }}

    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        name: wheel-${{ matrix.python.cibw }}-${{ runner.os }}-${{ matrix.platform.arch }}
        path: dist

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      if: ${{ matrix.platform.arch == 'aarch64' }}
      with:
        platforms: arm64

    - run: docker run -v "${{ github.workspace }}:/workspace" -w /workspace --platform linux/arm64/v8 "python:${{ matrix.python.setup }}" python3 .github/workflows/test.py
      if: ${{ matrix.platform.arch == 'aarch64' }}

    - name: Set up Python
      uses: actions/setup-python@v5
      if: ${{ matrix.platform.arch != 'aarch64' }}
      with:
        python-version: ${{ matrix.python.setup }}

    - if: ${{ matrix.platform.arch != 'aarch64' }}
      run: python .github/workflows/test.py

  collect:
    needs:
    - build
    - test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: wheel-*
        merge-multiple: true
        path: dist

    - run: find dist
