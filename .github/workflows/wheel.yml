---
name: build wheel file

on:
  push:
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
    - edited

jobs:
  matrix:
    strategy:
      matrix:
        cfg:
        - platform:
          - os: ubuntu-latest
            arch: x86_64
            docker: linux/amd64
            build: "manylinux_"
          - os: ubuntu-latest
            arch: i686
            docker: linux/386
            build: "manylinux_"
          - os: ubuntu-24.04-arm
            arch: aarch64
            docker: linux/arm64/v8
            build: "manylinux_"
          - os: ubuntu-24.04-arm
            arch: armv7l
            docker: linux/arm/v7
            build: "manylinux_"
          - os: ubuntu-latest
            arch: s390x
            docker: linux/s390x
            build: "manylinux_"
          - os: ubuntu-latest
            arch: ppc64le
            docker: linux/ppc64le
            build: "manylinux_"
          - os: ubuntu-latest
            arch: x86_64
            docker: linux/amd64
            build: "musllinux_"
          - os: ubuntu-latest
            arch: i686
            docker: linux/386
            build: "musllinux_"
          - os: ubuntu-24.04-arm
            arch: aarch64
            docker: linux/arm64/v8
            build: "musllinux_"
          - os: ubuntu-24.04-arm
            arch: armv7l
            docker: linux/arm/v7
            build: "musllinux_"
          - os: ubuntu-latest
            arch: s390x
            docker: linux/s390x
            build: "musllinux_"
          - os: ubuntu-latest
            arch: ppc64le
            docker: linux/ppc64le
            build: "musllinux_"
          - os: windows-latest
            arch: AMD64
            setup: x64
          - os: windows-latest
            arch: x86
            setup: x86
          - os: macos-13
            arch: x86_64
            setup: x64
          - os: macos-latest
            arch: arm64
            setup: arm64
          python:
          - setup: "3.6"
            cibw: cp36
          - setup: "3.7"
            cibw: cp37
          - setup: "3.8"
            cibw: cp38
          - setup: "3.9"
            cibw: cp39
          - setup: "3.10"
            cibw: cp310
          - setup: "3.11"
            cibw: cp311
          - setup: "3.12"
            cibw: cp312
          - setup: "3.13"
            cibw: cp313
          exclude:
          - {platform: {os: macos-latest, arch: arm64, setup: arm64},
             python: {setup: "3.6", cibw: cp36}}
          - {platform: {os: macos-latest, arch: arm64, setup: arm64},
             python: {setup: "3.7", cibw: cp37}}
          - {platform: {os: macos-latest, arch: arm64, setup: arm64},
             python: {setup: "3.8", cibw: cp38}}

    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      shell: python
      env:
        CFG: ${{ toJSON(matrix.cfg) }}
      run: |
        import json
        import os
        with open(os.environ["GITHUB_OUTPUT"], "a") as f:
            f.write(f"matrix={json.dumps(json.loads(os.environ['CFG']))}\n")

  build:
    needs:
    - matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    runs-on: ${{ matrix.platform.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      if: ${{ matrix.platform.arch == 's390x' }}
      with:
        platforms: s390x

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      if: ${{ matrix.platform.arch == 'ppc64le' }}
      with:
        platforms: ppc64le

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel>=2.22.0

    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_ARCHS: "${{ matrix.platform.arch }}"
        CIBW_BUILD: "${{ matrix.python.cibw }}-${{ matrix.platform.build }}*"
        CIBW_BUILD_VERBOSITY: 1

    - uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ matrix.python.cibw }}-${{ runner.os }}-${{ matrix.platform.arch }}-${{ matrix.platform.build }}
        path: ./wheelhouse/*.whl

  test:
    needs:
    - matrix
    - build
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    runs-on: ${{ matrix.platform.os }}

    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        name: wheel-${{ matrix.python.cibw }}-${{ runner.os }}-${{ matrix.platform.arch }}-${{ matrix.platform.build }}
        path: dist

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      if: ${{ matrix.platform.arch == 's390x' }}
      with:
        platforms: s390x

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      if: ${{ matrix.platform.arch == 'ppc64le' }}
      with:
        platforms: ppc64le

    - run: docker run -v "${{ github.workspace }}:/workspace" -w /workspace --platform "${{ matrix.platform.docker }}" "python:${{ matrix.python.setup }}" python3 .github/workflows/test.py
      if: ${{ runner.os == 'Linux' && matrix.platform.build == 'manylinux_' }}

    - run: docker run -v "${{ github.workspace }}:/workspace" -w /workspace --platform "${{ matrix.platform.docker }}" "python:${{ matrix.python.setup }}-alpine" python3 .github/workflows/test.py
      if: ${{ runner.os == 'Linux' && matrix.platform.build == 'musllinux_' }}

    - name: Set up Python
      uses: actions/setup-python@v5
      if: runner.os != 'Linux'
      with:
        python-version: ${{ matrix.python.setup }}
        architecture: ${{ matrix.platform.setup }}

    - if: runner.os != 'Linux'
      run: python .github/workflows/test.py

  release:
    needs:
    - build
    - test
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: wheel-*
        merge-multiple: true
        path: dist

    - run: find dist

    - if: ${{ startsWith(github.ref, 'refs/tags/ghrel-') }}
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*.whl
